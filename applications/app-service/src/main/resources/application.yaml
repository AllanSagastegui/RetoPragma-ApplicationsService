server:
  port: 8090
spring:
  application:
    name: "Applications-Service"
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null
logging:
  level:
    pe.com.ask: "trace"
springdoc:
  api-docs:
    path: "/v3/api-docs"
  swagger-ui:
    path: "/swagger-doc"
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
routes:
  path: null
adapters:
  r2dbc:
    host: "postgres-db"
    port: 5432
    database: "${DB_NAME}"
    username: "${DB_USER}"
    password: "${DB_PASSWORD}"
adapter:
  restconsumer:
    timeout: 5000
    url: "http://authentication-service:8080"
  sqs:
    region: "${AWS_REGION}"
    queueUrl: "${AWS_QUEUE_URL}"
    queueCalculateCapacity: "${AWS_QUEUE_CALCULATE_URL}"
    queueResponseCalculateCapacity: "${AWS_QUEUE_CALCULATE_RESPONSE_URL}"
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
